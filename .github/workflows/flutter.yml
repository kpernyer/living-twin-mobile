name: Flutter CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  FLUTTER_VERSION: '3.16.0'
  JAVA_VERSION: '11'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
    - uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Install dependencies
      run: flutter pub get

    - name: Run Flutter security audit
      run: flutter pub outdated --dependency-overrides

    - name: Dependency vulnerability scan
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    - run: dart pub global activate pana
    - run: pana --no-warning --exit-code-threshold 0

    - name: Scan for secrets
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif
      if: failure()

  test:
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
    - uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          .flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install dependencies
      run: flutter pub get

    - name: Verify formatting
      run: flutter format --set-exit-if-changed lib/ test/

    - name: Analyze code
      run: flutter analyze --fatal-infos --fatal-warnings

    - name: Run tests
      run: flutter test --coverage --test-randomize-ordering-seed random

    - name: Generate coverage
      run: flutter test --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: ${{ env.JAVA_VERSION }}

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          .flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release --split-debug-info=build/debug-info --obfuscate

    - name: Build App Bundle
      run: flutter build appbundle --release --split-debug-info=build/debug-info --obfuscate

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk-${{ github.sha }}
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Upload App Bundle
      uses: actions/upload-artifact@v3
      with:
        name: release-aab-${{ github.sha }}
        path: build/app/outputs/bundle/release/app-release.aab
        retention-days: 30

    - name: Upload debug symbols
      uses: actions/upload-artifact@v3
      with:
        name: debug-symbols-${{ github.sha }}
        path: build/debug-info/
        retention-days: 30

  build-ios:
    needs: test
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          .flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install dependencies
      run: flutter pub get

    - name: Install CocoaPods
      run: cd ios && pod install

    - name: Build iOS (no codesign)
      run: flutter build ios --release --no-codesign --split-debug-info=build/debug-info --obfuscate

    - name: Upload iOS build
      uses: actions/upload-artifact@v3
      with:
        name: ios-build-${{ github.sha }}
        path: build/ios/iphoneos/
        retention-days: 30

    - name: Upload debug symbols
      uses: actions/upload-artifact@v3
      with:
        name: ios-debug-symbols-${{ github.sha }}
        path: build/debug-info/
        retention-days: 30

  build-web:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          .flutter
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Install dependencies
      run: flutter pub get

    - name: Build Web
      run: flutter build web --release --web-renderer canvaskit

    - name: Upload Web build
      uses: actions/upload-artifact@v3
      with:
        name: web-build-${{ github.sha }}
        path: build/web/
        retention-days: 30

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Flutter Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: docker/Dockerfile.flutter
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/living-twin-mobile:latest
          ${{ secrets.DOCKER_USERNAME }}/living-twin-mobile:v${{ github.run_number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [build-android, build-ios, build-web]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
    - name: Deploy to Staging
      if: github.event.inputs.environment == 'staging' || github.ref == 'refs/heads/main'
      run: echo "Deploying to staging environment"

    - name: Deploy to Production
      if: github.event.inputs.environment == 'production'
      run: echo "Deploying to production environment"

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## ðŸš€ Living Twin Mobile v${{ github.run_number }}

          ### Changes
          - Automated release from commit ${{ github.sha }}

          ### Builds
          - âœ… Android APK available
          - âœ… Android App Bundle available
          - âœ… iOS build available
          - âœ… Web build available
          - âœ… Docker image published

          ### Downloads
          Download the latest builds from the Actions artifacts.
        draft: false
        prerelease: false
